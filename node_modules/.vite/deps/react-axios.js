import {
  require_prop_types
} from "./chunk-MGZSAOKF.js";
import {
  require_axios
} from "./chunk-JMDHZTGB.js";
import {
  require_react
} from "./chunk-LFG2FVU4.js";
import {
  __commonJS,
  __esm,
  __toESM
} from "./chunk-MR6QT7RZ.js";

// node_modules/react-axios/es/components/AxiosProvider.js
var import_react, import_prop_types, import_axios, AxiosContext, AxiosProvider, AxiosProvider_default;
var init_AxiosProvider = __esm({
  "node_modules/react-axios/es/components/AxiosProvider.js"() {
    import_react = __toESM(require_react());
    import_prop_types = __toESM(require_prop_types());
    import_axios = __toESM(require_axios());
    AxiosContext = import_react.default.createContext(import_axios.default);
    AxiosProvider = function AxiosProvider2(_ref) {
      var instance = _ref.instance, children = _ref.children;
      return import_react.default.createElement(
        AxiosContext.Provider,
        { value: instance },
        children
      );
    };
    AxiosProvider.defaultProps = {};
    AxiosProvider.propTypes = {
      instance: import_prop_types.default.func.isRequired,
      children: import_prop_types.default.any.isRequired
    };
    AxiosProvider_default = AxiosProvider;
  }
});

// node_modules/react-axios/es/utils/index.js
function debounce(func, wait, immediate) {
  var timeout = void 0;
  var initialArgs = void 0;
  return function() {
    var context = this, args = arguments;
    if (!timeout) {
      initialArgs = args;
      if (immediate) func.apply(context, args);
    }
    clearTimeout(timeout);
    timeout = setTimeout(function() {
      timeout = null;
      if (!immediate || immediate && initialArgs != args) func.apply(context, args);
    }, wait);
  };
}
var init_utils = __esm({
  "node_modules/react-axios/es/utils/index.js"() {
  }
});

// node_modules/react-axios/es/components/Request.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var import_react2, import_prop_types2, import_axios2, Request, Request_default;
var init_Request = __esm({
  "node_modules/react-axios/es/components/Request.js"() {
    import_react2 = __toESM(require_react());
    import_prop_types2 = __toESM(require_prop_types());
    import_axios2 = __toESM(require_axios());
    init_AxiosProvider();
    init_utils();
    Request = function(_React$Component) {
      _inherits(Request2, _React$Component);
      function Request2(props) {
        _classCallCheck(this, Request2);
        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
        _this.state = {
          isLoading: false,
          response: null,
          error: null
          // create debounce function
        };
        _this.setupDebounce(props);
        return _this;
      }
      Request2.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        var newProps = this.props;
        if (prevProps.debounce !== newProps.debounce) {
          this.setupDebounce(newProps);
        }
        var oldPropStr = JSON.stringify(prevProps);
        var newPropStr = JSON.stringify(newProps);
        if (oldPropStr != newPropStr && newProps.isReady) {
          this.debounceMakeRequest(newProps, this.getConfig(newProps));
        }
        return null;
      };
      Request2.prototype.componentDidMount = function componentDidMount() {
        this._mounted = true;
        if (this.props.isReady) {
          this.debounceMakeRequest(this.props, this.getConfig(this.props));
        }
      };
      Request2.prototype.onMakeReload = function onMakeReload(props) {
        this.debounceMakeRequest(props || this.props, this.getConfig(props ? Object.assign({}, this.props, props) : this.props));
      };
      Request2.prototype.componentWillUnmount = function componentWillUnmount() {
        this._mounted = false;
        if (this.source && typeof this.source.cancel === "function") {
          this.source.cancel("Canceling last request.");
        }
      };
      Request2.prototype.setupDebounce = function setupDebounce(props) {
        this.debounceMakeRequest = debounce(this.makeRequest, props.debounce, props.debounceImmediate);
      };
      Request2.prototype.getConfig = function getConfig(props) {
        return Object.assign({ url: props.url, method: props.method, data: props.data, params: props.params }, props.config);
      };
      Request2.prototype.makeRequest = function makeRequest(props, config) {
        var _this2 = this;
        var _axios = props.instance || this.context || import_axios2.default;
        if (!this._mounted || config.url === void 0) {
          return;
        }
        if (this.source) {
          this.source.cancel("Canceling previous request.");
        }
        this.source = import_axios2.default.CancelToken.source();
        this.setState({ isLoading: true, error: null });
        if (typeof props.onLoading === "function") {
          props.onLoading();
        }
        _axios.request(Object.assign({ cancelToken: this.source.token }, config)).then(function(res) {
          if (!_this2._mounted) {
            return;
          }
          _this2.setState({ isLoading: false, response: res });
          if (typeof props.onSuccess === "function") {
            props.onSuccess(res);
          }
        }, function(err) {
          if (!_this2._mounted) {
            return;
          }
          if (!import_axios2.default.isCancel(err)) {
            _this2.setState({ isLoading: false, response: err.response, error: err });
            if (typeof props.onError === "function") {
              props.onError(err);
            }
          }
        });
      };
      Request2.prototype.render = function render() {
        var _this3 = this;
        if (typeof this.props.children === "function") {
          var _axios = this.props.instance || this.context || import_axios2.default;
          return this.props.children(this.state.error, this.state.response, this.state.isLoading, function(props) {
            return _this3.onMakeReload(props);
          }, _axios);
        }
        return null;
      };
      return Request2;
    }(import_react2.default.Component);
    Request.contextType = AxiosContext;
    Request.defaultProps = {
      url: void 0,
      method: "get",
      data: void 0,
      config: {},
      debounce: 200,
      debounceImmediate: true,
      isReady: true
    };
    Request.propTypes = {
      instance: import_prop_types2.default.func,
      url: import_prop_types2.default.string,
      method: import_prop_types2.default.oneOf(["get", "delete", "head", "post", "put", "patch", "options"]).isRequired,
      data: import_prop_types2.default.object,
      params: import_prop_types2.default.object,
      config: import_prop_types2.default.object,
      isReady: import_prop_types2.default.bool,
      debounce: import_prop_types2.default.number,
      debounceImmediate: import_prop_types2.default.bool,
      onSuccess: import_prop_types2.default.func,
      onLoading: import_prop_types2.default.func,
      onError: import_prop_types2.default.func,
      children: import_prop_types2.default.func
    };
    Request_default = Request;
  }
});

// node_modules/react-axios/es/components/withAxios.js
var import_react3, import_prop_types3, _extends, withAxios, withAxios_default;
var init_withAxios = __esm({
  "node_modules/react-axios/es/components/withAxios.js"() {
    import_react3 = __toESM(require_react());
    import_prop_types3 = __toESM(require_prop_types());
    init_Request();
    init_AxiosProvider();
    _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    withAxios = function withAxios2() {
      var mixed = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      if (typeof mixed === "function") {
        var WrappedComponent = mixed;
        return function(props) {
          var axiosInstance = import_react3.default.useContext(AxiosContext);
          return import_react3.default.createElement(WrappedComponent, _extends({ axios: axiosInstance }, props));
        };
      }
      var options = _extends({}, Request_default.defaultProps, mixed);
      return function(WrappedComponent2) {
        import_prop_types3.default.checkPropTypes(_extends({}, Request_default.propTypes, {
          method: import_prop_types3.default.string
          // not required if the user just wants access to the axios instance
        }), options, "option", "withAxios()(" + WrappedComponent2.name + ")");
        var ReactAxiosExtracter = function ReactAxiosExtracter2(props) {
          var newOptions = _extends({}, options, props.options);
          return import_react3.default.createElement(
            Request_default,
            newOptions,
            function(error, response, isLoading, makeRequest, axios3) {
              return import_react3.default.createElement(WrappedComponent2, _extends({}, props, {
                error,
                response,
                isLoading,
                makeRequest,
                axios: axios3,
                options: newOptions
              }));
            }
          );
        };
        ReactAxiosExtracter.propTypes = {
          options: import_prop_types3.default.object
        };
        return ReactAxiosExtracter;
      };
    };
    withAxios_default = withAxios;
  }
});

// node_modules/react-axios/es/components/RequestWrapper.js
var import_react4, _extends2, RequestWrapper, RequestWrapper_default;
var init_RequestWrapper = __esm({
  "node_modules/react-axios/es/components/RequestWrapper.js"() {
    import_react4 = __toESM(require_react());
    init_Request();
    _extends2 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    RequestWrapper = function RequestWrapper2(method) {
      return function(props) {
        return import_react4.default.createElement(
          Request_default,
          _extends2({}, props, { method }),
          props.children
        );
      };
    };
    RequestWrapper_default = RequestWrapper;
  }
});

// node_modules/react-axios/es/index.js
var require_es = __commonJS({
  "node_modules/react-axios/es/index.js"(exports, module) {
    init_AxiosProvider();
    init_withAxios();
    init_Request();
    init_RequestWrapper();
    module.exports = {
      AxiosProvider: AxiosProvider_default,
      Request: Request_default,
      Get: RequestWrapper_default("get"),
      Delete: RequestWrapper_default("delete"),
      Head: RequestWrapper_default("head"),
      Post: RequestWrapper_default("post"),
      Put: RequestWrapper_default("put"),
      Patch: RequestWrapper_default("patch"),
      withAxios: withAxios_default
    };
  }
});
export default require_es();
//# sourceMappingURL=react-axios.js.map
